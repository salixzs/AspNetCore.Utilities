<Project Sdk="Microsoft.NET.Sdk">

  <!-- === General properties ===-->
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <RootNamespace>Salix.AspNetCore.Utilities</RootNamespace>
    <LangVersion>latest</LangVersion>
    <NeutralLanguage>en</NeutralLanguage>
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
    <NoWarn>1701;1702;IDE0008;IDE0130;IDE0160;CA1848;CA2254</NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- === NuGet package description properties ===-->
  <PropertyGroup Label="NuGet properties">
    <PackageId>Salix.AspNetCore.Utilities</PackageId>
    <Authors>Anrijs Vitolins;GitHub contributors</Authors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <DebugSymbols>true</DebugSymbols>
    <PackageTags>aspnet;aspnetcore;api;configuration;healthcheck;error handler</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>utilities.png</PackageIcon>
    <Description>
Core functionalities which should exist in each (REST) API implementation with ASP.NET Core 3+ framework.
Provides Global Error Handler (JSON object details on unhandled exceptions),HealthCheck customizations (formatter), Simple root page and healthcheck results page and ConfigurationValidation handlers and extensions. 
    </Description>
    <PackageReadmeFile>nuget_readme.md</PackageReadmeFile>
    <PackageProjectUrl>https://github.com/salixzs/AspNetCore.Utilities</PackageProjectUrl>
    <RepositoryUrl>https://github.com/salixzs/AspNetCore.Utilities</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <PackageReleaseNotes>
Breaking: Error handler - DataValidationError takes set Error response (defaulting to 400).
New: Added possibility to selectively disable either/both logging of exception and/or returning Json error object.
Updated some dependencies (NuGets).
    </PackageReleaseNotes>
    <Version>3.0.0</Version>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <FileVersion>3.0.0.0</FileVersion>
  </PropertyGroup>

  <!-- === Dependencies on other NuGet packages (minimum version) ===-->
  <ItemGroup>
    <PackageReference Include="ConfigurationValidation" Version="1.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.HealthChecks" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Hosting.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Extensions" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="3.1.30" />
    <PackageReference Include="Microsoft.Extensions.Configuration.FileExtensions" Version="3.1.30" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="3.1.30" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="3.1.30" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="3.1.30" />
    <PackageReference Include="Microsoft.Net.Http.Headers" Version="2.2.8" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Text.Json" Version="6.0.6" />
  </ItemGroup>

  <!-- === Solution project dependencies ===-->
  <ItemGroup>
    <Compile Update="Pages\Html.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Html.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Pages\Html.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Html.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Include="../../utilities.png" Pack="true" Visible="false" PackagePath="" />
    <None Include="../../nuget_readme.md" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>
  
  <!-- Making internal class/methods visible to test solution-->
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>$(AssemblyName).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
  
</Project>
